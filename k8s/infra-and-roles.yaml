---
apiVersion: v1
kind: Namespace
metadata:
  name: user-envs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-admin
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "list", "watch", "delete", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-pod-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: pod-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-exec
rules:
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-pod-exec
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: pod-exec
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: compute-resources
  namespace: user-envs
spec:
  hard:
    requests.cpu: "1"     # Maximum CPU requests in cores
    requests.memory: 1Gi  # Maximum memory requests in bytes
    limits.cpu: "1"       # Maximum CPU limits in cores
    limits.memory: 1Gi    # Maximum memory limits in bytes
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-egress
  namespace: user-envs
spec:
  podSelector:
    matchLabels:
      app: user-env  # Match pods with label "app": "user-env"
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0  # Block all IP addresses



