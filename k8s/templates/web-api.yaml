---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-api
  labels:
    app: web-api
spec:
  selector:
    matchLabels:
      app: web-api
  replicas: 1
  template:
    metadata:
      labels:
        app: web-api
    spec:
      initContainers:
        - name: postgres-ready-check
          image: postgres:latest
          command: [ "sh", "-c", "until pg_isready --dbname=${POSTGRES_DB} --host=${POSTGRES_HOST} --port=${POSTGRES_PORT} --username=${POSTGRES_USER}; do echo waiting for Postgres; sleep 2; done;" ]
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.webAPI.envVars.POSTGRES_HOST | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.webAPI.envVars.POSTGRES_PORT | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.webAPI.envVars.POSTGRES_DB | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.webAPI.envVars.POSTGRES_USER | quote }}
      containers:
        - name: web-api
          image: {{ .Values.webAPI.containers.image | quote }}
          imagePullPolicy: Always
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.webAPI.envVars.POSTGRES_HOST | quote  }}
            - name: POSTGRES_PORT
              value: {{ .Values.webAPI.envVars.POSTGRES_PORT | quote  }}
            - name: POSTGRES_DB
              value: {{ .Values.webAPI.envVars.POSTGRES_DB | quote  }}
            - name: POSTGRES_USER
              value: {{ .Values.webAPI.envVars.POSTGRES_USER | quote  }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.webAPI.envVars.POSTGRES_PASSWORD | quote  }}

          ports:
            - name: web-api
              containerPort: 8000
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: web-api
spec:
  ports:
    - port: 8000
      targetPort: 8000
      name: web-api
  selector:
    app: web-api
  type: ClusterIP
